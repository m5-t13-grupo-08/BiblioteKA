openapi: 3.0.3
info:
  title: BiblioteKA
  version: 1.0.0
  description: Projeto M5 - Api para gest√£o de biblioteca
paths:
  /api/books/:
    get:
      operationId: books_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookList'
          description: ''
    post:
      operationId: books_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{book_id}/:
    get:
      operationId: books_retrieve
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: books_update
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: books_partial_update
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: books_destroy
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/books/{book_id}/copy/:
    get:
      operationId: books_copy_list
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCopyList'
          description: ''
    post:
      operationId: books_copy_create
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Copy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Copy'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
          description: ''
  /api/books/{book_id}/follow/:
    post:
      operationId: books_follow_create
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Follow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Follow'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
  /api/books/{book_id}/unfollow/:
    delete:
      operationId: books_unfollow_destroy
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/books/copy/{copy_id}/:
    get:
      operationId: books_copy_retrieve
      parameters:
      - in: path
        name: copy_id
        schema:
          type: string
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
          description: ''
    put:
      operationId: books_copy_update
      parameters:
      - in: path
        name: copy_id
        schema:
          type: string
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Copy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Copy'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
          description: ''
    patch:
      operationId: books_copy_partial_update
      parameters:
      - in: path
        name: copy_id
        schema:
          type: string
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCopy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCopy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCopy'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
          description: ''
    delete:
      operationId: books_copy_destroy
      parameters:
      - in: path
        name: copy_id
        schema:
          type: string
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/books/loan/{loan_id}/:
    get:
      operationId: books_loan_retrieve
      parameters:
      - in: path
        name: loan_id
        schema:
          type: string
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    delete:
      operationId: books_loan_destroy
      parameters:
      - in: path
        name: loan_id
        schema:
          type: string
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/user/loan/historic/:
    get:
      operationId: user_loan_historic_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoanList'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{user_id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{user_id}/books/{book_id}/loan/:
    get:
      operationId: users_books_loan_list
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoanList'
          description: ''
    post:
      operationId: users_books_loan_create
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        zip_code:
          type: string
          maxLength: 20
        uf:
          type: string
          maxLength: 2
        complement:
          type: string
        telephone:
          type: string
          maxLength: 30
        street:
          type: string
          maxLength: 50
        district:
          type: string
          maxLength: 50
      required:
      - complement
      - district
      - id
      - street
      - telephone
      - uf
      - zip_code
    Book:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 80
        author:
          type: string
          maxLength: 40
        page_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        publisher:
          type: string
          maxLength: 40
        cdu:
          type: string
          maxLength: 50
        copies:
          type: integer
          readOnly: true
        followed_by:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
      required:
      - author
      - cdu
      - copies
      - followed_by
      - id
      - page_number
      - publisher
      - title
    Copy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        book:
          type: string
          format: uuid
          readOnly: true
        buyed_at:
          type: string
          format: date
        price:
          type: number
          format: double
        sector:
          $ref: '#/components/schemas/SectorEnum'
      required:
      - book
      - buyed_at
      - id
      - price
    Follow:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        book_id:
          type: string
          readOnly: true
        user_id:
          type: string
          readOnly: true
      required:
      - book_id
      - id
      - user_id
    Loan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          readOnly: true
        user_email:
          type: string
          readOnly: true
        books_title:
          type: string
          readOnly: true
        copy:
          type: integer
          readOnly: true
        loan_date:
          type: string
          format: date
          readOnly: true
        deadline:
          type: string
          format: date
          readOnly: true
          nullable: true
        devolutions_date:
          type: string
          format: date
          readOnly: true
          nullable: true
        renovations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - books_title
      - copy
      - deadline
      - devolutions_date
      - id
      - loan_date
      - user
      - user_email
      - username
    Nested:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 80
        author:
          type: string
          maxLength: 40
        page_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        publisher:
          type: string
          maxLength: 40
        cdu:
          type: string
          maxLength: 50
        followed_by:
          type: array
          items:
            type: string
            format: uuid
      required:
      - author
      - cdu
      - followed_by
      - id
      - page_number
      - publisher
      - title
    PaginatedBookList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    PaginatedCopyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Copy'
    PaginatedLoanList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedBook:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 80
        author:
          type: string
          maxLength: 40
        page_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        publisher:
          type: string
          maxLength: 40
        cdu:
          type: string
          maxLength: 50
        copies:
          type: integer
          readOnly: true
        followed_by:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
    PatchedCopy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        book:
          type: string
          format: uuid
          readOnly: true
        buyed_at:
          type: string
          format: date
        price:
          type: number
          format: double
        sector:
          $ref: '#/components/schemas/SectorEnum'
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
        user_category:
          $ref: '#/components/schemas/UserCategoryEnum'
        first_name:
          type: string
          maxLength: 35
        last_name:
          type: string
          maxLength: 35
        username:
          type: string
        password:
          type: string
          writeOnly: true
          maxLength: 128
        situation:
          type: string
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        is_superuser:
          type: boolean
          nullable: true
          default: false
        followed_books:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
    SectorEnum:
      enum:
      - general_collection
      - restauration
      - lost
      - technical_treatment
      type: string
      description: |-
        * `general_collection` - General Collection
        * `restauration` - Restauration
        * `lost` - Lost
        * `technical_treatment` - Technical Treatment
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
        user_category:
          $ref: '#/components/schemas/UserCategoryEnum'
        first_name:
          type: string
          maxLength: 35
        last_name:
          type: string
          maxLength: 35
        username:
          type: string
        password:
          type: string
          writeOnly: true
          maxLength: 128
        situation:
          type: string
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        is_superuser:
          type: boolean
          nullable: true
          default: false
        followed_books:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - address
      - email
      - first_name
      - followed_books
      - id
      - last_name
      - password
      - situation
      - username
    UserCategoryEnum:
      enum:
      - graduation
      - post_graduation
      - collaborator
      type: string
      description: |-
        * `graduation` - Graduation
        * `post_graduation` - Post Graduation
        * `collaborator` - Collaborator
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
